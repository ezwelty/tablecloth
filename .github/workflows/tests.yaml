name: tests
on: push
jobs:
  tests:
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: ['3.9']
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} - python ${{ matrix.python-version }}
    env:
      coverage: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9' }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached Poetry environment
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ matrix.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --all-extras --no-interaction --no-root
      - name: Install library
        run: poetry install --no-interaction
      - name: Run tests
        if: env.coverage != 'true'
        run: poetry run pytest --doctest-modules src tests
      - name: Run tests (with coverage)
        if: env.coverage == 'true'
        run: poetry run pytest --doctest-modules src tests --cov --cov-report xml
      - name: Upload coverage to Codecov
        if: env.coverage == 'true'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
