name: tests
on: push
jobs:
  tests:
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: ['3.9']
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} - python ${{ matrix.python-version }}
    env:
      coverage: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9' }}
    steps:
      - uses: actions/checkout@v3
      - run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
          architecture: x64
      - name: Configure poetry
        if: matrix.os != 'windows-latest'
        run: poetry env use ${{ matrix.python-version }}
      - name: Configure poetry (Windows)
        if: matrix.os == 'windows-latest'
        run: poetry env use $(py ${{ matrix.python-version }} -c 'import sys; print(sys.executable)')
      - run: poetry install --all-extras --no-interaction
      - name: Run tests
        if: env.coverage == 'false'
        run: poetry run pytest --doctest-modules src tests
      - name: Run tests (with coverage)
        if: env.coverage == 'true'
        run: poetry run pytest --doctest-modules src tests --cov --cov-report xml
      - name: Upload coverage to Codecov
        if: env.coverage == 'true'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
